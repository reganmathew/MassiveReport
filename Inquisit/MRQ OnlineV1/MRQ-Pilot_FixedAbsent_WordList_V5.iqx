<include>
/ file = "instructions.iqx"
/ file = "response_elements.iqx"
/ file = "masks.iqx"
/ file = "word_list_FixedWords_V5.iqx"
/ file = "absent_wordlist_fixed.iqx"
/ file = "pictures_Zhaos_Words_V4.iqx"
/ file = "stimulus_pairs.iqx"
</include>

*************************************************************************************

first, include all necessary dependencies above


next, define key values, trial types, and events

*************************************************************************************

<values>
/ wordcount = 0
/ imagecount = 0
/ totalwords = 80
/ totalimages = 5
/ imageName = "placeholder_image"
/ currentWord = "placeholder_descriptor"
</values>

<data>
/ columns=[subject, blockcode, trialcode, trialnum, latency, response, values.imageName, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber, stimulusitem, stimulusnumber]
</data>

<text progress>
/ items = ("Word <%values.wordcount%> of <%values.totalwords%>")
/ position = (50%, 87%)
/ size = (20%, 10%)
/ erase = false
</text>

<text imNum>
/ items = ("Image <%values.imagecount%> of <%values.totalimages%>")
/ position = (50%, 90%)
/ size = (20%, 10%)
/ erase = false
</text>


<trial practice>
/ ontrialbegin = [
	values.imageName = picture.practice_pics.currentitem;
	values.wordcount = 0;
	values.totalwords = 12;	
	values.imagecount +=1;
	values.totalimages = 3;
]
/ stimulustimes = [
	0 = focuspoint;
	1300 = practice_pics;
	1500 = mask1;
	1625 = mask2;
	1750 = mask3;
	1875 = mask4;
	2000 = mask5;
	]
/ timeout = 2000
/ branch = [
	trial.centre_mouse
]
</trial>

<trial test>
/ ontrialbegin = [
	values.imageName = picture.stimuli.currentitem;
	values.wordcount = 0;
	values.imagecount +=1;
	values.totalwords = 80;
	values.totalimages = 5
]
/ stimulustimes = [
	0 = focuspoint;
	1367 = stimuli;
	1500 = mask1;
	1625 = mask2;
	1750 = mask3;
	1875 = mask4;
	2000 = mask5;
	]
/ timeout = 2000
/ branch = [
	trial.centre_mouse
]
</trial>


*************************************************************************************

the centre_mouse trial fits between each picture and descriptor presentation


the purpose is to re-centre the mouse to avoid repetition bias

*************************************************************************************

<trial centre_mouse>
/ stimulustimes = [
	0 = no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4, confidence, guessing, yes, no, progress, imNum, reveal;
]
/ inputdevice = mouse
/ validresponse = (reveal)
</trial>

*************************************************************************************

the present and absent words will be presented in a random order


these trials will be repeated until all word lists have been exhausted

*************************************************************************************

<trial practice_present_trial>
/ ontrialbegin = [
	if(values.wordcount == 12 && values.imagecount == 3)
	values.imagecount = 0;
	values.imageName = picture.practice_pics.currentitem;
	values.wordcount += 1;
	values.currentWord = list.practice_present_words.currentvalue;
]
/ stimulusframes = [
	1 = no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4, confidence, guessing, yes, no, progress, imNum;
	2 = list.practice_present_words;
	]
/ inputdevice = mouse
/ validresponse = (no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4)
/ branch = [
	trial.centre_mouse
]
</trial>

<trial practice_absent_trial>
/ ontrialbegin = [
	if(values.wordcount == 12 && values.imagecount == 3)
	values.imagecount = 0;
	values.imageName = picture.practice_pics.currentitem;
	values.wordcount += 1;
	values.currentWord = list.practice_absent_words.currentvalue;
]
/ stimulusframes = [
	1 = no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4, confidence, guessing, yes, no, progress, imNum;
	2 = list.practice_absent_words;
	]
/ inputdevice = mouse
/ validresponse = (no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4)
/ correctresponse=(no_3, no_4)
/ branch = [
	trial.centre_mouse
]
</trial>

<trial reset>
/ ontrialbegin = [
	values.wordcount = 0;
	values.imagecount = 0;
]
/ timeout = 200
</trial>

<trial present_trial>
/ ontrialbegin = [
	values.imageName = picture.stimuli.currentitem;
	values.wordcount += 1;
	values.currentWord = list.present_words.currentvalue;
]
/ stimulusframes = [
	1 = no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4, confidence, guessing, yes, no, progress, imNum;
	2 = list.present_words;
	]
/ inputdevice = mouse
/ validresponse = (no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4)
/ correctresponse=(yes_3, yes_4)
/ branch = [
	trial.centre_mouse
]
</trial>

<trial absent_trial>
/ ontrialbegin = [
	values.imageName = picture.stimuli.currentitem;
	values.wordcount += 1;
	values.currentWord = list.absent_words.currentvalue;
]
/ stimulusframes = [
	1 = no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4, confidence, guessing, yes, no, progress, imNum;
	2 = list.absent_words;
	]
/ inputdevice = mouse
/ validresponse = (no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4)
/ correctresponse=(no_3, no_4)
/ branch = [
	trial.centre_mouse
]
</trial>

<trial catch_present_trial>
/ stimulusframes = [
	1 = no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4, confidence, guessing, yes, no, progress, imNum;
	2 = list.catch_present_words;
	]
/ inputdevice = mouse
/ validresponse = (no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4)
/ correctresponse=(yes_1, yes_2, yes_3, yes_4)
/ branch = [
	trial.centre_mouse
]
</trial>

<trial catch_absent_trial>
/ stimulusframes = [
	1 = no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4, confidence, guessing, yes, no, progress, imNum;
	2 = list.catch_absent_words;
	]
/ inputdevice = mouse
/ validresponse = (no_1, no_2, no_3, no_4, yes_1, yes_2, yes_3, yes_4)
/ correctresponse=(no_1, no_2, no_3, no_4)
/ branch = [
	trial.centre_mouse
]
</trial>


*************************************************************************************

next, define the present and absent word list properties

*************************************************************************************

<list practice_present_words>
/ items = (text.prac_present1, text.prac_present2, text.prac_present3)
/ selectionmode = picture.practice_pics.currentindex
/ selectionrate = block
</list>

<list practice_absent_words>
/ items = (text.prac_absent1, text.prac_absent2, text.prac_absent3)
/ selectionmode = picture.practice_pics.currentindex
/ selectionrate = block
</list>

<list present_words>
/ items = (text.p1, text.p2, text.p3, text.p4, text.p5)
/ selectionmode = picture.stimuli.currentindex
/ selectionrate = block
</list>

<list absent_words>
/ items = (text.a1, text.a2, text.a3, text.a4, text.a5)
/ selectionmode = picture.stimuli.currentindex
/ selectionrate = block
</list>

<list catch_present_words>
/ items = (text.catch_present)
/ selectionrate = always
</list>

<list catch_absent_words>
/ items = (text.catch_absent)
/ selectionrate = always
</list>


*************************************************************************************

note: the present words are yolked to specific image numbers with /selectionmode


now, we can simply present the stimuli in randomised order (1-picture, then 80-Qs with catch trials)

*************************************************************************************

<block practiceBlock>
/ trials = [1=practice; 2-13=noreplace(trial.practice_present_trial, trial.practice_absent_trial); 14-15=noreplace(trial.catch_present_trial,trial.catch_absent_trial)]
</block>

<block reset>
/ trials = [1=reset]
</block>

<block testBlock>
/ trials = [1=test; 2-21=noreplace(trial.present_trial, trial.absent_trial); 22=noreplace(trial.catch_present_trial,trial.catch_absent_trial); 23-52=noreplace(trial.present_trial, trial.absent_trial); 53=noreplace(trial.catch_present_trial,trial.catch_absent_trial); 54-83=noreplace(trial.present_trial, trial.absent_trial)]
/ preinstructions = (task_reminder)
</block>

<expt>
/ blocks=[1-3=practiceBlock; 4=reset; 5-9=testBlock]
/ preinstructions = (block1_prepage)
</expt>